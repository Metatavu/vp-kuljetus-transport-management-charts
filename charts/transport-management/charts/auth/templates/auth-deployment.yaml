apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-auth
  namespace: {{ .Release.Namespace }}
spec:
  progressDeadlineSeconds: 600
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: {{ .Release.Name }}-auth
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ .Release.Name }}-auth
    spec:
      containers:
      - image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: IfNotPresent
        name: {{ .Release.Name }}-auth
        command:
        - /bin/sh
        - -c
        - /opt/keycloak/bin/kc.sh start
        envFrom:
          - secretRef:
              name: {{ .Values.authSecretName }}
        env:
          - name: JAVA_OPTS_APPEND
            value: -Djgroups.dns.query={{ .Release.Name }}-auth-ping.{{ .Release.Namespace }}.svc.cluster.local
        name: {{ .Release.Namespace }}-vp-kuljetus-auth
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 4444
          name: ping
          protocol: TCP
        resources:
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 240
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 240
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30