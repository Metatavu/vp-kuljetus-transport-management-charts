{{- $serviceHostname := printf "%s-monitoring-service.%s.svc.cluster.local:8080" .Release.Name .Release.Namespace }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .Release.Name }}-monitoring-service-cronjob
spec:
  schedule: "* * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: resolvemonitorstatuses
            envFrom:
              - secretRef:
                  name: {{ .Values.monitoringServiceSecretName }}
            command:
            - /bin/sh
            - -c
            - |
              if ! curl --silent --show-error --fail --header "X-CRON-Key: $VP_MONITORING_CRON_APIKEY" http://{{ $serviceHostname }}/v1/cron/resolveMonitorStatuses; then
                echo 'Failed to resolve monitor statuses' >&2
                exit 1
              fi
            image: curlimages/curl:8.16.0
            imagePullPolicy: Always
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
          - name: triggerpolicies
            envFrom:
              - secretRef:
                  name: {{ .Values.monitoringServiceSecretName }}
            command:
            - /bin/sh
            - -c
            - |
              if ! curl --silent --show-error --fail --header "X-CRON-Key: $VP_MONITORING_CRON_APIKEY" http://{{ $serviceHostname }}/v1/cron/triggerPolicies; then
                echo 'Failed to trigger policies' >&2
                exit 1
              fi
            image: curlimages/curl:8.16.0
            imagePullPolicy: Always
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
          - name: createlostsensorincidents
            envFrom:
              - secretRef:
                  name: {{ .Values.monitoringServiceSecretName }}
            command:
            - /bin/sh
            - -c
            - |
              if ! curl --silent --show-error --fail --header "X-CRON-Key: $VP_MONITORING_CRON_APIKEY" http://{{ $serviceHostname }}/v1/cron/createLostSensorIncidents; then
                echo 'Failed to create lost sensor incidents' >&2
                exit 1
              fi
            image: curlimages/curl:8.16.0
            imagePullPolicy: Always
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: OnFailure
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
